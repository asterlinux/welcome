#!/bin/python

import webbrowser
import subprocess
import gi
gi.require_version("Gtk", "3.0")
from gi.repository import Gtk
import os

class Main:
    def __init__(self):
        home = os.environ["HOME"]

        if home == "/home/aster":
            gladefile= "/usr/share/welcome/welcome-liveuser.glade"
            live_user = True
        else:
            gladefile= "/usr/share/welcome/welcome.glade"
            live_user = False

        self.builder = Gtk.Builder()
        self.builder.add_from_file(gladefile)

        window = self.builder.get_object("window")
        window.connect("delete-event",Gtk.main_quit)
        window.show()

        if live_user is True:
            calamares = self.builder.get_object("install")
            calamares.connect("clicked",self.install)

        if live_user is False:
            wallpapr = self.builder.get_object("wallpaper")
            wallpapr.connect("clicked",self.wallpaper)

        mirrors = self.builder.get_object("mirror")
        mirrors.connect("clicked",self.mirror)
        


        support = self.builder.get_object("support")
        support.connect("clicked",self.support)

        web = self.builder.get_object("web")
        web.connect("clicked",self.web) 

        release = self.builder.get_object("release")
        release.connect("clicked",self.release)

        applications = self.builder.get_object("applications")
        applications.connect("clicked",self.discover)

        autostart = self.builder.get_object("autostart_switch")
        autostart.connect("notify::active",self.autostart)

        about_button = self.builder.get_object("about_button")
        about_button.connect("clicked",self.about)

       

        config_file_dir = f"{home}/.config/welcome/welcome.conf"
        with open(config_file_dir,"r") as config:
            config_file = config.readline()
            if int(config_file) == 0:
                autostart.set_active(False)
            else:
                pass



    # launch calamares installer
    def install(self,widget):
        subprocess.run(["pkexec", "calamares"])
    
        
    def mirror(self,mirrors):
        mirrors.set_property("label","Updating Mirrors")
        subprocess.run(["pkexec", "/usr/bin/reflector", "--age", "6", "--latest", "21", "--fastest", "21", "--threads", "21", "--sort", "rate", "--protocol", "https", "--save", "/etc/pacman.d/mirrorlist"], shell=False,check=True)
        mirrors.set_property("label","Mirrors Updated")

    def wallpaper(self,widget):
        subprocess.run("variety")
    
    # open aster linux support page,home page,release page
    def support(self,widget):
        webbrowser.open_new("https://asterlinux.github.io/support")
    def web(self,widget):
        webbrowser.open_new("https://asterlinux.github.io")
    def release(self,widget):
        webbrowser.open_new("https://asterlinux.github.io/release")

    # add/remove software launch
    def discover(self,widget):
        subprocess.run("plasma-discover")
    
    def autostart(self,autostart,gpram):
        if autostart.get_active():
            state = "1"
        else:
            state = "0"
        home = os.environ["HOME"]
        config_file_dir = f"{home}/.config/welcome/welcome.conf"
        config_file = open(config_file_dir,"w",encoding="UTF-8")
        config_file.write(state)
        config_file.close()

    def about(self,about_button):

        about_file = "/usr/share/welcome/about.glade"
        self.builder = Gtk.Builder()
        self.builder.add_from_file(about_file)

        about = self.builder.get_object("about")
        about.connect("delete-event",about.close)
        about.show()



if __name__ == '__main__':
    main = Main()
    Gtk.main()
